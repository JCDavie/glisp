(def *modes* (atom []))

(defmacro defmode [mode-name handlers]
  (swap! *modes* conj {:name (name mode-name) :handlers handlers}))

(defmode polyline
  {:label "Polyline"
   :icon {:type "character" :value "‚è¢"}
   :setup (fn [] {:item nil})
   :press (fn {:item item :pos pos}
            {:item
             (if (nil? item)
               (insert-item '(polyline pos))
               (replace-item item (conj item pos)))})})

(defmode select
  {:label "Select"
   :icon {:type "fontawesome" :value "fas fa-mouse-pointer"}
   :move (fn {:pos pos}
           (when-let [item (detect-hit pos)]
             (hover-item item)))})